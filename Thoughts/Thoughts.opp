INCLUDE "const.oph"

INCLUDE "system.oxh"
INCLUDE "date.oxh"

INCLUDE "SystInfo.oxh"

APP Thoughts, &100092ca
	CAPTION "Thoughts", 1
ENDA

PROC main:
	GLOBAL CRLF$(2)
	LOCAL ev&(16), k&
	LOCAL capture&

	initglobals:
	clear:

	REM Capture the global hotkey.
	capture& = CAPTUREKEY&:(%t, KModifierFunc&, KModifierFunc&)

	WHILE 1
		GETEVENT32 ev&()
		IF ev&(KEvAType%) = KKeyMenu% OR ev&(KEvAType%) = KKeySidebarMenu%
			REM Menu button.
			menu:
		ELSEIF ev&(KEvAType%) = %t AND ev&(KEvAKMod%) = KKModFn%
			REM Global hotkey (Fn + T)
			new:
		ELSEIF ev&(KEvAType%) < 32
			REM Key codes are modified if control is pressed.
			k& = ev&(KEvAType%) + %a - 1
			IF k& = %n
				new:
			ELSEIF k& = %e AND ev&(KEvAKMod%) = KKModControl%
				close:
			ELSEIF k& = %k AND ev&(KEvAKMod%) = KKModControl%
				clear:
			ELSEIF k& = %a AND ev&(KEvAKMod%) = (KKModControl% OR KKModShift%)
				about:
			ELSE
				PRINT k&
			ENDIF
		ELSEIF (ev&(KEvAType%) AND &400) = 0
			PRINT ev&(1), ev&(2), ev&(3), ev&(4), ev&(5)
		ENDIF
	ENDWH

ENDP

PROC initglobals:
	CRLF$ = CHR$(13) + CHR$(10)
ENDP

PROC menu:
	LOCAL m%

	mINIT
	mCARD "File", "New", -%n, "Close", %e
	mCARD "View", "Clear", %k
	mCARD "Tools", "About Thoughts...", %A
	m% = MENU

	IF m% = %n
		new:
	ELSEIF m% = %e
		close:
	ELSEIF m% = %k
		clear:
	ELSEIF m% = %A
		about:
	ENDIF
ENDP

PROC about:
	dINIT "About Thoughts"
	dTEXT "", "Copyright " + CHR$(169) + " Jason Morley 2024"
	dBUTTONS "OK", 13 + $100
	DIALOG
ENDP

PROC close:
	STOP
ENDP

PROC clear:
	CLS
	PRINT "Thoughts"
	PRINT "========"
ENDP

PROC new:
	LOCAL k&
	LOCAL timestamp&, offset&, date$(25)
	LOCAL directory$(255), basename$(22), path$(255)
	LOCAL content$(255)
	LOCAL handle%
	LOCAL r%

	directory$ = "C:\Thoughts"

	REM Get the current timestamp and offset.
	timestamp&=now&:
	offset&=SIUTCOffset&:

	REM Format the date, path, and content.
	date$ = iso8601$:(timestamp&, offset&)
	basename$ = basename$:(timestamp&, offset&)
	path$ = directory$ + "\" + basename$ + ".md"
	content$ = "---" + CRLF$ + "date: " + date$ + CRLF$ + "---" + REPT$(CRLF$, 2)

	REM Write the metadata to the file.
	r% = IOOPEN(handle%, path$, 1)
	IF (r% <> 0)
		REM TODO: Present the error.
		PRINT "Failed to open file with error " + NUM$(r%, 2) + "."
		GET
		RETURN
	ENDIF
	REM TODO: Check the number of bytes written.
	IOWRITE(handle%, ADDR(content$) + 1, LEN(content$))
	r% = IOCLOSE(handle%)
	IF (r% <> 0)
		REM TODO: Present the error.
		PRINT "Failed to close file with error " + NUM$(r%,2) + "."
		GET
		RETURN
	ENDIF

	REM Ensure the destination directory exists.
	IF NOT EXIST(directory$)
		MKDIR directory$
	ENDIF

	REM Open the file.
	PRINT path$
	k& = RUNAPP&:("Editor", path$, "", 0)
ENDP

PROC zpad$:(value&, length%)
	REM Left-pad strings with '0' up to a length, length%.

	RETURN RIGHT$(REPT$("0", length%) + NUM$(value&, length%), length%)
ENDP

PROC iso8601$:(timestamp&, utcOffset&)
	REM Return an ISO 8601 formatted date and time with UTC offset.
	REM Result is guaranteed to be 25 characters long.

	LOCAL year%, month%, day%, hour%, minute%, second%, yearday%
	LOCAL offsetSign$(1), offsetHours&, offsetMinutes&
	LOCAL result$(25)

	REM Extract the timestamp components.
	SECSTODATE timestamp&, year%, month%, day%, hour%, minute%, second%, yearday%

	REM Extract the offset components.
	offsetHours& = IABS(utcOffset& / 3600)
	offsetMinutes& = MOD&:(utcOffset& / 60, 60)
	IF (utcOffset& < 0)
		offsetSign$="-"
	ELSE
		offsetSign$="+"
	ENDIF

	RETURN NUM$(year%, 4) + "-" + zpad$:(month%, 2) + "-" + zpad$:(day%, 2) + "T" + zpad$:(hour%, 2) + ":" + zpad$:(minute%, 2) + ":" + zpad$:(second%, 2) + offsetSign$ + zpad$:(offsetHours&, 2) + ":" + zpad$:(offsetMinutes&, 2)
ENDP

PROC now&:
	REM Return the current time as seconds since epoch.
	LOCAL epoch&, now&, result&

	epoch&=DTNEWDATETIME&:(1970, 1, 1, 0, 0, 0, 0)
	now&=DTNOW&:
	result&=DTSECSDIFF&:(epoch&, now&)
	DTDELETEDATETIME:(epoch&)
	DTDELETEDATETIME:(now&)

	RETURN result&
ENDP

PROC basename$:(timestamp&, utcOffset&)
	REM Return a string representation of timestamp& and utcOffset& suitable for using in a filename.
	REM Result is guaranteed to be 19 characters long.
	LOCAL utcTimestamp&
	LOCAL year%, month%, day%, hour%, minute%, second%, yearday%

	utcTimestamp& = timestamp& - utcOffset&
	SECSTODATE utcTimestamp&, year%, month%, day%, hour%, minute%, second%, yearday%

	RETURN NUM$(year%, 4) + "-" + zpad$:(month%, 2) + "-" + zpad$:(day%, 2) + "-" + zpad$:(hour%, 2) + "-" + zpad$:(minute%, 2) + "-" + zpad$:(second%, 2)
ENDP
